---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
import { Breadcrumbs } from 'astro-breadcrumbs';
import 'astro-breadcrumbs/breadcrumbs.css';
const { pageTitle } = Astro.props;
const isIndexPage = Astro.url.pathname === '/';
---

<html lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta
      name="viewport"
      content="viewport-fit=cover, width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"
    />
    <meta name="generator" content={Astro.generator} />

    <script is:inline>
      // This logic must execute early, so that we set the necessary
      // CSS classes to the document node and avoid unstyled content
      // from appearing on the page.
      const THEME_PREFERENCE_LOCAL_STORAGE_KEY = 'themePreference';
      const DARK_MODE_CLASS_NAME = 'dark';
      const LIGHT_MODE_CLASS_NAME = 'light';
      const PREFERS_COLOR_SCHEME_DARK = '(prefers-color-scheme: dark)';

      const theme =
        localStorage.getItem(THEME_PREFERENCE_LOCAL_STORAGE_KEY) ?? 'auto';
      const prefersDark =
        window.matchMedia &&
        window.matchMedia(PREFERS_COLOR_SCHEME_DARK).matches;
      const documentClassList = document.documentElement.classList;

      // clearing classes before setting them.
      document.documentElement.className = '';
      if (theme === 'dark' || (theme === 'auto' && prefersDark)) {
        documentClassList.add(DARK_MODE_CLASS_NAME);
      } else {
        documentClassList.add(LIGHT_MODE_CLASS_NAME);
      }
    </script>

    <title>{pageTitle}</title>
  </head>
  <body>
    <Header />
    <main>
      {
        !isIndexPage && (
          <Breadcrumbs
            id="breadcrumps"
            linkTextFormat="sentence"
            truncated={true}
            customizeLinks={[{ index: 'last', 'aria-disabled': true }]}
          >
            <svg
              slot="ellipsis"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <>
                <circle cx="12" cy="12" r="1" />
                <circle cx="19" cy="12" r="1" />
                <circle cx="5" cy="12" r="1" />
              </>
            </svg>
            <div
              class="index"
              slot="index"
              style="display: flex; align-content: center; gap: 0.5rem; color: var(--primary-color);"
            >
              <svg
                aria-label="Home Page"
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <>
                  <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
                  <polyline points="9 22 9 12 15 12 15 22" />
                </>
              </svg>
              Home
            </div>

            <svg
              slot="separator"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <polyline points="9 18 15 12 9 6" />
            </svg>
          </Breadcrumbs>
        )
      }
      <slot />
    </main></body
  >
  <Footer />
</html>
